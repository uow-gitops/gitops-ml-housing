name: Retrain Model

# Give the GITHUB_TOKEN write permission so it can push commits
permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
      # ① Checkout with credentials so we can push
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0        # full history, needed for pull/rebase

      # ② Set up Python
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # ③ Install dependencies (pin numpy<2 for seaborn & scipy)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "numpy<2"
          pip install pandas scikit-learn matplotlib seaborn scipy joblib psycopg2 sqlalchemy

      # ④ Retrain the model
      - name: Retrain model
        run: python app/main.py

            # ⑤ Commit & push the new model file
      - name: Commit & push model.pkl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # 1️⃣ Sync with remote and stash any local changes
          git pull --rebase --autostash origin master

          # 2️⃣ Remove any old tracked model files
          for old in app/model/model.pkl model/model.pkl app/model.pkl; do
            if git ls-files --error-unmatch "$old" > /dev/null 2>&1; then
              git rm "$old"
              git commit -m "Remove old model: $old"
            fi
          done

          # 3️⃣ Force‑add the newly generated model (bypass .gitignore if needed)
          git add -f app/model.pkl

          # ➡️ Move it into the proper folder, re‑add, and remove the stray copy
          if [ -f app/model.pkl ]; then
            mv app/model.pkl app/model/model.pkl
            git add -f app/model/model.pkl
            git rm --cached app/model.pkl || true
            echo "Moved new model to app/model/model.pkl and staged it."
          fi

          # 4️⃣ Commit & push
          if ! git diff --cached --quiet; then
            git commit -m "Retrained model: app/model/model.pkl"
            git push origin master
          else
            echo "No changes to commit."
          fi


      - name: Trigger built_deploy via GitHub API
        env:
          PAT_TOKEN: ${{ secrets.PUSH_TOKEN }}
          REPO:      ${{ github.repository }}
        run: |
          echo "Dispatching built_deploy.yml on master…"
          response=$(
            curl -s -o /dev/null -w "%{http_code}" \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token $PAT_TOKEN" \
              https://api.github.com/repos/$REPO/actions/workflows/built_deploy.yml/dispatches \
              -d '{"ref":"master"}'
          )
          if [ "$response" = "204" ]; then
            echo "✅ built_deploy workflow dispatched!"
          else
            echo "❌ Dispatch failed with HTTP $response"
            exit 1
          fi


